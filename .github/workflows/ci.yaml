defaults:
  run:
    working-directory: .
permissions:
  pull-requests: write

name: "CI Infrastructure"

on:
  push:
    branches:
      - feature/**

env:
 # verbosity setting for Terraform logs
 TF_LOG: ${{ vars.TF_LOG}}
 AWS_REGION: ${{ vars.AWS_REGION }}
 # S3 bucket for the Terraform state
 BUCKET_TF_STATE: ${{ vars.BUCKET_TF_STATE}}
 BUCKET_TF_KEY: ${{ vars.BUCKET_TF_KEY}}
 TF_DESTROY: ${{ vars.TF_DESTROY }}

jobs:
  terraform-ci:
    name:  terraform-ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "~> 1.6"

      - name: Create backend  tfvars
        run: |
          cat << 'EOF' > ${{ github.workspace }}/backend.tfvars
            bucket =  "${{ env.BUCKET_TF_STATE }}"
            key    =  "test/${{ env.BUCKET_TF_KEY }}.tfstate"
            region =  "${{ env.AWS_REGION }}" 
          EOF
        shell: bash

      - name: Configure  AWS  Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt
        continue-on-error: false

      - name: Terraform Init
        id: init
        run: terraform init  -backend-config="${{ github.workspace }}/backend.tfvars"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan 
        if: ${{ env.TF_DESTROY == 'FALSE' || env.TF_DESTROY == 'false'  }}
        id: plan
        run: terraform plan  
        continue-on-error: false

      - name: Terraform Plan -destroy
        if: ${{ env.TF_DESTROY == 'TRUE' || env.TF_DESTROY == 'true'  }}
        id: plan-destroy
        run: terraform plan -destroy 
        continue-on-error: false

  tflint:
    name: tflint
    runs-on: ubuntu-latest
    needs: terraform-ci

    steps:
      - uses: actions/checkout@v3
        name: Checkout source code

      - uses: actions/cache@v3
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: v0.44.1

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact

  tfsec:
    name: tfsec
    runs-on: ubuntu-latest
    needs: terraform-ci

    steps:
      - name: Clone repo
        uses: actions/checkout@master

      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.0

  terrascan:
    name: terrascan
    runs-on: ubuntu-latest
    needs: terraform-ci

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Run Terrascan
      id: terrascan
      uses: tenable/terrascan-action@main
      with:
        iac_type: 'terraform'
        iac_version: 'v14'
        policy_type: 'aws'
        only_warn: true
        #scm_token: ${{ secrets.ACCESS_TOKEN }}
        #verbose: true
        #sarif_upload: true
        #non_recursive:
        #iac_dir:
        #policy_path:
        #skip_rules:
        #config_path:
        #find_vulnerabilities:
        #webhook_url:
        #webhook_token:

  checkov:
    name: checkov
    runs-on: ubuntu-latest
    needs: terraform-ci

    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./
          # file: ./tfplan.json # optional: provide the path for resource to be scanned. This will override the directory if both are provided.
          check: CKV_AWS_1 # optional: run only a specific check_id. can be comma separated list
          skip_check: CKV_AWS_2 # optional: skip a specific check_id. can be comma separated list
          quiet: true # optional: display only failed checks
          soft_fail: true # optional: do not return an error code if there are failed checks
          framework: terraform # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
          # skip_framework: terraform # optional: skip a specific infrastructure {cloudformation,terraform,kubernetes,all}
          # skip_cve_package: CVE_2019_8331 # optional: skip a specific CVE package in SCA scans, can be comma separated list
          # output_format: sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
          # output_file_path: reports/results.sarif # folder and name of results file
          # output_bc_ids: true # optional: output Bridgecrew platform IDs instead of checkov IDs
          # download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry
          # repo_root_for_plan_enrichment: example/ #optional: Directory containing the hcl code used to generate a given terraform plan file. Use together with `file`
          # var_file: ./testdir/gocd.yaml # optional: variable files to load in addition to the default files. Currently only supported for source Terraform and Helm chart scans.
          log_level: DEBUG # optional: set log level. Default WARNING
          # config_file: path/this_file
          # baseline: cloudformation/.checkov.baseline # optional: Path to a generated baseline file. Will only report results not in the baseline.
          # container_user: 1000 # optional: Define what UID and / or what GID to run the container under to prevent permission issues
          # use_enforcement_rules: true # optional - use enforcement rule configs from the platform

  open-pr:
    name: open-pr
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Create pull request
        id: open-pr
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "main"
          pr_title: "AUTOMATIC PR: FEATURE -> MAIN"
          # pr_template: ".github/PULL_REQUEST_TEMPLATE.md"
          # pr_reviewer: "paigen11"
          pr_draft: false


