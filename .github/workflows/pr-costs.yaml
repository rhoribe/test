defaults:
  run:
    working-directory: .
permissions:
  pull-requests: write

name: "Costs Infrastructure"

on:
  pull_request:
    branches:
      - main

env:
 # verbosity setting for Terraform logs
 TF_LOG: ${{ vars.TF_LOG}}
 AWS_REGION: ${{ vars.AWS_REGION }}
 # S3 bucket for the Terraform state
 BUCKET_TF_STATE: ${{ vars.BUCKET_TF_STATE}}
 BUCKET_TF_KEY: ${{ vars.BUCKET_TF_KEY}}
 TF_DESTROY: ${{ vars.TF_DESTROY }}

jobs:
  infracost:
    name: Infracost
    runs-on: ubuntu-latest
    permissions:
      contents: read
      # Required to post comments
      pull-requests: write

    env:
      TF_ROOT: ${{ github.workspace }}
 
    steps:
    
      - name: Configure  AWS  Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - uses: actions/checkout@v3
      
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "~> 1.6"

      - name: Create backend  tfvars
        run: |
          cat << 'EOF' > ${{ github.workspace }}/backend.tfvars
            bucket =  "${{ env.BUCKET_TF_STATE }}"
            key    =  "test/${{ env.BUCKET_TF_KEY }}.tfstate"
            region =  "${{ env.AWS_REGION }}" 
          EOF
        shell: bash

      - name: Configure  AWS  Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Terraform Init
        id: init
        run: terraform init  -backend-config="${{ github.workspace }}/backend.tfvars"

      - name: Terraform Plan 
        if: ${{ env.TF_DESTROY == 'FALSE' || env.TF_DESTROY == 'false'  }}
        id: plan
        run: terraform plan -out plan.tfplan
        continue-on-error: false

      - name: Terraform Plan -destroy
        if: ${{ env.TF_DESTROY == 'TRUE' || env.TF_DESTROY == 'true'  }}
        id: plan-destroy
        run: terraform plan -destroy  -out plan.tfplan
        continue-on-error: false

     # Generates show for Terraform
      - name: Terraform Show
        id: show
        run: terraform show -json plan.tfplan

      - name: "Save Plan JSON"
        run: echo '${{ steps.show.outputs.stdout }}' > plan.json # Do not change

      - name: Run infracost diff
        uses: infracost/infracost-gh-action@master # Use a specific version instead of master if locking is preferred
        env:
          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        with:
          path: plan.json # Do not change as this file is generated above