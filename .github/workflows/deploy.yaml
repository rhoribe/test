defaults:
  run:
    working-directory: .
permissions:
  pull-requests: write

name: "Deploy Infrastructure"

on:
  push:
    branches:
      - main

env:
 # verbosity setting for Terraform logs
 TF_LOG: ${{ vars.TF_LOG}}
 AWS_REGION: ${{ vars.AWS_REGION }}
 # S3 bucket for the Terraform state
 BUCKET_TF_STATE: ${{ vars.BUCKET_TF_STATE}}
 BUCKET_TF_KEY: ${{ vars.BUCKET_TF_KEY}}
 TF_DESTROY: ${{ vars.TF_DESTROY }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "~> 1.6"

      - name: Create backend  tfvars
        run: |
          cat << 'EOF' > ${{ github.workspace }}/backend.tfvars
            bucket =  "${{ env.BUCKET_TF_STATE }}"
            key    =  "test/${{ env.BUCKET_TF_KEY }}.tfstate"
            region =  "${{ env.AWS_REGION }}" 
          EOF
        shell: bash

      - name: Configure  AWS  Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt
        continue-on-error: false

      - name: Terraform Init
        id: init
        run: terraform init  -backend-config="${{ github.workspace }}/backend.tfvars"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan 
        if: ${{ env.TF_DESTROY == 'FALSE' || env.TF_DESTROY == 'false'  }}
        id: plan
        run: terraform plan -no-color
        continue-on-error: false

      - name: Terraform Apply
        if: ${{ env.TF_DESTROY == 'FALSE' || env.TF_DESTROY == 'false'  }}
        id: apply
        run: terraform apply -auto-approve -input=false

      - name: Terraform Plan -destroy
        if: ${{ env.TF_DESTROY == 'TRUE' || env.TF_DESTROY == 'true'  }}
        id: plan-destroy
        run: terraform plan -destroy -no-color
        continue-on-error: false

      - name: Terraform Destroy
        if: ${{ env.TF_DESTROY == 'TRUE' || env.TF_DESTROY == 'true'  }}
        id: destroy
        run: terraform destroy -auto-approve -input=false
     



